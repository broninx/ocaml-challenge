(lang dune 3.19)
(name ocamlgraph)
(version 2.2.0)
(sections (lib .) (libexec .) (doc ../../doc/ocamlgraph))
(files
 (lib
  (META
   blocks.ml
   builder.ml
   builder.mli
   chaoticIteration.ml
   chaoticIteration.mli
   classic.ml
   classic.mli
   clique.ml
   clique.mli
   cliquetree.ml
   cliquetree.mli
   coloring.ml
   coloring.mli
   components.ml
   components.mli
   contraction.ml
   contraction.mli
   cycles.ml
   cycles.mli
   dGraphModel.ml
   dGraphModel.mli
   dGraphRandModel.ml
   dGraphRandModel.mli
   dGraphSubTree.ml
   dGraphSubTree.mli
   dGraphTreeLayout.ml
   dGraphTreeLayout.mli
   dGraphTreeModel.ml
   dGraphTreeModel.mli
   delaunay.ml
   delaunay.mli
   dominator.ml
   dominator.mli
   dot.ml
   dot.mli
   dot_ast.mli
   dot_lexer.ml
   dot_parser.ml
   dot_parser.mli
   dune-package
   eulerian.ml
   eulerian.mli
   fixpoint.ml
   fixpoint.mli
   flow.ml
   flow.mli
   gmap.ml
   gmap.mli
   gml.ml
   gml.mli
   graph.a
   graph.cma
   graph.cmi
   graph.cmt
   graph.cmx
   graph.cmxa
   graph.ml
   graph__.cmi
   graph__.cmt
   graph__.cmx
   graph__.ml
   graph__Bitv.cmi
   graph__Bitv.cmt
   graph__Bitv.cmti
   graph__Bitv.cmx
   graph__Blocks.cmi
   graph__Blocks.cmt
   graph__Blocks.cmx
   graph__Builder.cmi
   graph__Builder.cmt
   graph__Builder.cmti
   graph__Builder.cmx
   graph__ChaoticIteration.cmi
   graph__ChaoticIteration.cmt
   graph__ChaoticIteration.cmti
   graph__ChaoticIteration.cmx
   graph__Classic.cmi
   graph__Classic.cmt
   graph__Classic.cmti
   graph__Classic.cmx
   graph__Clique.cmi
   graph__Clique.cmt
   graph__Clique.cmti
   graph__Clique.cmx
   graph__Cliquetree.cmi
   graph__Cliquetree.cmt
   graph__Cliquetree.cmti
   graph__Cliquetree.cmx
   graph__Coloring.cmi
   graph__Coloring.cmt
   graph__Coloring.cmti
   graph__Coloring.cmx
   graph__Components.cmi
   graph__Components.cmt
   graph__Components.cmti
   graph__Components.cmx
   graph__Contraction.cmi
   graph__Contraction.cmt
   graph__Contraction.cmti
   graph__Contraction.cmx
   graph__Cycles.cmi
   graph__Cycles.cmt
   graph__Cycles.cmti
   graph__Cycles.cmx
   graph__DGraphModel.cmi
   graph__DGraphModel.cmt
   graph__DGraphModel.cmti
   graph__DGraphModel.cmx
   graph__DGraphRandModel.cmi
   graph__DGraphRandModel.cmt
   graph__DGraphRandModel.cmti
   graph__DGraphRandModel.cmx
   graph__DGraphSubTree.cmi
   graph__DGraphSubTree.cmt
   graph__DGraphSubTree.cmti
   graph__DGraphSubTree.cmx
   graph__DGraphTreeLayout.cmi
   graph__DGraphTreeLayout.cmt
   graph__DGraphTreeLayout.cmti
   graph__DGraphTreeLayout.cmx
   graph__DGraphTreeModel.cmi
   graph__DGraphTreeModel.cmt
   graph__DGraphTreeModel.cmti
   graph__DGraphTreeModel.cmx
   graph__Delaunay.cmi
   graph__Delaunay.cmt
   graph__Delaunay.cmti
   graph__Delaunay.cmx
   graph__Deque.cmi
   graph__Deque.cmt
   graph__Deque.cmti
   graph__Deque.cmx
   graph__Dominator.cmi
   graph__Dominator.cmt
   graph__Dominator.cmti
   graph__Dominator.cmx
   graph__Dot.cmi
   graph__Dot.cmt
   graph__Dot.cmti
   graph__Dot.cmx
   graph__Dot_ast.cmi
   graph__Dot_ast.cmti
   graph__Dot_lexer.cmi
   graph__Dot_lexer.cmt
   graph__Dot_lexer.cmx
   graph__Dot_parser.cmi
   graph__Dot_parser.cmt
   graph__Dot_parser.cmti
   graph__Dot_parser.cmx
   graph__Eulerian.cmi
   graph__Eulerian.cmt
   graph__Eulerian.cmti
   graph__Eulerian.cmx
   graph__Fixpoint.cmi
   graph__Fixpoint.cmt
   graph__Fixpoint.cmti
   graph__Fixpoint.cmx
   graph__Flow.cmi
   graph__Flow.cmt
   graph__Flow.cmti
   graph__Flow.cmx
   graph__Gmap.cmi
   graph__Gmap.cmt
   graph__Gmap.cmti
   graph__Gmap.cmx
   graph__Gml.cmi
   graph__Gml.cmt
   graph__Gml.cmti
   graph__Gml.cmx
   graph__Graphml.cmi
   graph__Graphml.cmt
   graph__Graphml.cmti
   graph__Graphml.cmx
   graph__Graphviz.cmi
   graph__Graphviz.cmt
   graph__Graphviz.cmti
   graph__Graphviz.cmx
   graph__Heap.cmi
   graph__Heap.cmt
   graph__Heap.cmti
   graph__Heap.cmx
   graph__Imperative.cmi
   graph__Imperative.cmt
   graph__Imperative.cmti
   graph__Imperative.cmx
   graph__Kruskal.cmi
   graph__Kruskal.cmt
   graph__Kruskal.cmti
   graph__Kruskal.cmx
   graph__Leaderlist.cmi
   graph__Leaderlist.cmt
   graph__Leaderlist.cmti
   graph__Leaderlist.cmx
   graph__Mcs_m.cmi
   graph__Mcs_m.cmt
   graph__Mcs_m.cmti
   graph__Mcs_m.cmx
   graph__Md.cmi
   graph__Md.cmt
   graph__Md.cmti
   graph__Md.cmx
   graph__Merge.cmi
   graph__Merge.cmt
   graph__Merge.cmti
   graph__Merge.cmx
   graph__Mincut.cmi
   graph__Mincut.cmt
   graph__Mincut.cmti
   graph__Mincut.cmx
   graph__Minsep.cmi
   graph__Minsep.cmt
   graph__Minsep.cmti
   graph__Minsep.cmx
   graph__Nonnegative.cmi
   graph__Nonnegative.cmt
   graph__Nonnegative.cmti
   graph__Nonnegative.cmx
   graph__Oper.cmi
   graph__Oper.cmt
   graph__Oper.cmti
   graph__Oper.cmx
   graph__Pack.cmi
   graph__Pack.cmt
   graph__Pack.cmti
   graph__Pack.cmx
   graph__Path.cmi
   graph__Path.cmt
   graph__Path.cmti
   graph__Path.cmx
   graph__Persistent.cmi
   graph__Persistent.cmt
   graph__Persistent.cmti
   graph__Persistent.cmx
   graph__PersistentQueue.cmi
   graph__PersistentQueue.cmt
   graph__PersistentQueue.cmti
   graph__PersistentQueue.cmx
   graph__Prim.cmi
   graph__Prim.cmt
   graph__Prim.cmti
   graph__Prim.cmx
   graph__Rand.cmi
   graph__Rand.cmt
   graph__Rand.cmti
   graph__Rand.cmx
   graph__Sig.cmi
   graph__Sig.cmti
   graph__Sig_pack.cmi
   graph__Sig_pack.cmti
   graph__Strat.cmi
   graph__Strat.cmt
   graph__Strat.cmti
   graph__Strat.cmx
   graph__Topological.cmi
   graph__Topological.cmt
   graph__Topological.cmti
   graph__Topological.cmx
   graph__Traverse.cmi
   graph__Traverse.cmt
   graph__Traverse.cmti
   graph__Traverse.cmx
   graph__Unionfind.cmi
   graph__Unionfind.cmt
   graph__Unionfind.cmti
   graph__Unionfind.cmx
   graph__Util.cmi
   graph__Util.cmt
   graph__Util.cmti
   graph__Util.cmx
   graph__WeakTopological.cmi
   graph__WeakTopological.cmt
   graph__WeakTopological.cmti
   graph__WeakTopological.cmx
   graph__XDot.cmi
   graph__XDot.cmt
   graph__XDot.cmti
   graph__XDot.cmx
   graph__XDotDraw.cmi
   graph__XDotDraw.cmt
   graph__XDotDraw.cmti
   graph__XDotDraw.cmx
   graphml.ml
   graphml.mli
   graphviz.ml
   graphviz.mli
   imperative.ml
   imperative.mli
   kruskal.ml
   kruskal.mli
   leaderlist.ml
   leaderlist.mli
   lib/bitv.ml
   lib/bitv.mli
   lib/deque.ml
   lib/deque.mli
   lib/heap.ml
   lib/heap.mli
   lib/persistentQueue.ml
   lib/persistentQueue.mli
   lib/unionfind.ml
   lib/unionfind.mli
   mcs_m.ml
   mcs_m.mli
   md.ml
   md.mli
   merge.ml
   merge.mli
   mincut.ml
   mincut.mli
   minsep.ml
   minsep.mli
   nonnegative.ml
   nonnegative.mli
   opam
   oper.ml
   oper.mli
   pack.ml
   pack.mli
   path.ml
   path.mli
   persistent.ml
   persistent.mli
   prim.ml
   prim.mli
   rand.ml
   rand.mli
   sig.mli
   sig_pack.mli
   strat.ml
   strat.mli
   topological.ml
   topological.mli
   traverse.ml
   traverse.mli
   util.ml
   util.mli
   weakTopological.ml
   weakTopological.mli
   xDot.ml
   xDot.mli
   xDotDraw.ml
   xDotDraw.mli))
 (libexec (graph.cmxs))
 (doc (CHANGES.md LICENSE README.md)))
(library
 (name ocamlgraph)
 (kind normal)
 (archives (byte graph.cma) (native graph.cmxa))
 (plugins (byte graph.cma) (native graph.cmxs))
 (native_archives graph.a)
 (main_module_name Graph)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name graph__)
     (visibility public)
     (kind alias)
     (source (path Graph__) (impl (path graph__.ml-gen))))
    (name Graph)
    (modules
     (module
      (obj_name graph__Bitv)
      (visibility public)
      (source
       (path Bitv)
       (intf (path lib/bitv.mli))
       (impl (path lib/bitv.ml))))
     (module
      (obj_name graph__Blocks)
      (visibility public)
      (source (path Blocks) (impl (path blocks.ml))))
     (module
      (obj_name graph__Builder)
      (visibility public)
      (source
       (path Builder)
       (intf (path builder.mli))
       (impl (path builder.ml))))
     (module
      (obj_name graph__ChaoticIteration)
      (visibility public)
      (source
       (path ChaoticIteration)
       (intf (path chaoticIteration.mli))
       (impl (path chaoticIteration.ml))))
     (module
      (obj_name graph__Classic)
      (visibility public)
      (source
       (path Classic)
       (intf (path classic.mli))
       (impl (path classic.ml))))
     (module
      (obj_name graph__Clique)
      (visibility public)
      (source (path Clique) (intf (path clique.mli)) (impl (path clique.ml))))
     (module
      (obj_name graph__Cliquetree)
      (visibility public)
      (source
       (path Cliquetree)
       (intf (path cliquetree.mli))
       (impl (path cliquetree.ml))))
     (module
      (obj_name graph__Coloring)
      (visibility public)
      (source
       (path Coloring)
       (intf (path coloring.mli))
       (impl (path coloring.ml))))
     (module
      (obj_name graph__Components)
      (visibility public)
      (source
       (path Components)
       (intf (path components.mli))
       (impl (path components.ml))))
     (module
      (obj_name graph__Contraction)
      (visibility public)
      (source
       (path Contraction)
       (intf (path contraction.mli))
       (impl (path contraction.ml))))
     (module
      (obj_name graph__Cycles)
      (visibility public)
      (source (path Cycles) (intf (path cycles.mli)) (impl (path cycles.ml))))
     (module
      (obj_name graph__DGraphModel)
      (visibility public)
      (source
       (path DGraphModel)
       (intf (path dGraphModel.mli))
       (impl (path dGraphModel.ml))))
     (module
      (obj_name graph__DGraphRandModel)
      (visibility public)
      (source
       (path DGraphRandModel)
       (intf (path dGraphRandModel.mli))
       (impl (path dGraphRandModel.ml))))
     (module
      (obj_name graph__DGraphSubTree)
      (visibility public)
      (source
       (path DGraphSubTree)
       (intf (path dGraphSubTree.mli))
       (impl (path dGraphSubTree.ml))))
     (module
      (obj_name graph__DGraphTreeLayout)
      (visibility public)
      (source
       (path DGraphTreeLayout)
       (intf (path dGraphTreeLayout.mli))
       (impl (path dGraphTreeLayout.ml))))
     (module
      (obj_name graph__DGraphTreeModel)
      (visibility public)
      (source
       (path DGraphTreeModel)
       (intf (path dGraphTreeModel.mli))
       (impl (path dGraphTreeModel.ml))))
     (module
      (obj_name graph__Delaunay)
      (visibility public)
      (source
       (path Delaunay)
       (intf (path delaunay.mli))
       (impl (path delaunay.ml))))
     (module
      (obj_name graph__Deque)
      (visibility public)
      (source
       (path Deque)
       (intf (path lib/deque.mli))
       (impl (path lib/deque.ml))))
     (module
      (obj_name graph__Dominator)
      (visibility public)
      (source
       (path Dominator)
       (intf (path dominator.mli))
       (impl (path dominator.ml))))
     (module
      (obj_name graph__Dot)
      (visibility public)
      (source (path Dot) (intf (path dot.mli)) (impl (path dot.ml))))
     (module
      (obj_name graph__Dot_ast)
      (visibility public)
      (source (path Dot_ast) (intf (path dot_ast.mli))))
     (module
      (obj_name graph__Dot_lexer)
      (visibility public)
      (source (path Dot_lexer) (impl (path dot_lexer.ml))))
     (module
      (obj_name graph__Dot_parser)
      (visibility public)
      (source
       (path Dot_parser)
       (intf (path dot_parser.mli))
       (impl (path dot_parser.ml))))
     (module
      (obj_name graph__Eulerian)
      (visibility public)
      (source
       (path Eulerian)
       (intf (path eulerian.mli))
       (impl (path eulerian.ml))))
     (module
      (obj_name graph__Fixpoint)
      (visibility public)
      (source
       (path Fixpoint)
       (intf (path fixpoint.mli))
       (impl (path fixpoint.ml))))
     (module
      (obj_name graph__Flow)
      (visibility public)
      (source (path Flow) (intf (path flow.mli)) (impl (path flow.ml))))
     (module
      (obj_name graph__Gmap)
      (visibility public)
      (source (path Gmap) (intf (path gmap.mli)) (impl (path gmap.ml))))
     (module
      (obj_name graph__Gml)
      (visibility public)
      (source (path Gml) (intf (path gml.mli)) (impl (path gml.ml))))
     (module
      (obj_name graph)
      (visibility public)
      (source (path Graph) (impl (path graph.ml))))
     (module
      (obj_name graph__Graphml)
      (visibility public)
      (source
       (path Graphml)
       (intf (path graphml.mli))
       (impl (path graphml.ml))))
     (module
      (obj_name graph__Graphviz)
      (visibility public)
      (source
       (path Graphviz)
       (intf (path graphviz.mli))
       (impl (path graphviz.ml))))
     (module
      (obj_name graph__Heap)
      (visibility public)
      (source
       (path Heap)
       (intf (path lib/heap.mli))
       (impl (path lib/heap.ml))))
     (module
      (obj_name graph__Imperative)
      (visibility public)
      (source
       (path Imperative)
       (intf (path imperative.mli))
       (impl (path imperative.ml))))
     (module
      (obj_name graph__Kruskal)
      (visibility public)
      (source
       (path Kruskal)
       (intf (path kruskal.mli))
       (impl (path kruskal.ml))))
     (module
      (obj_name graph__Leaderlist)
      (visibility public)
      (source
       (path Leaderlist)
       (intf (path leaderlist.mli))
       (impl (path leaderlist.ml))))
     (module
      (obj_name graph__Mcs_m)
      (visibility public)
      (source (path Mcs_m) (intf (path mcs_m.mli)) (impl (path mcs_m.ml))))
     (module
      (obj_name graph__Md)
      (visibility public)
      (source (path Md) (intf (path md.mli)) (impl (path md.ml))))
     (module
      (obj_name graph__Merge)
      (visibility public)
      (source (path Merge) (intf (path merge.mli)) (impl (path merge.ml))))
     (module
      (obj_name graph__Mincut)
      (visibility public)
      (source (path Mincut) (intf (path mincut.mli)) (impl (path mincut.ml))))
     (module
      (obj_name graph__Minsep)
      (visibility public)
      (source (path Minsep) (intf (path minsep.mli)) (impl (path minsep.ml))))
     (module
      (obj_name graph__Nonnegative)
      (visibility public)
      (source
       (path Nonnegative)
       (intf (path nonnegative.mli))
       (impl (path nonnegative.ml))))
     (module
      (obj_name graph__Oper)
      (visibility public)
      (source (path Oper) (intf (path oper.mli)) (impl (path oper.ml))))
     (module
      (obj_name graph__Pack)
      (visibility public)
      (source (path Pack) (intf (path pack.mli)) (impl (path pack.ml))))
     (module
      (obj_name graph__Path)
      (visibility public)
      (source (path Path) (intf (path path.mli)) (impl (path path.ml))))
     (module
      (obj_name graph__Persistent)
      (visibility public)
      (source
       (path Persistent)
       (intf (path persistent.mli))
       (impl (path persistent.ml))))
     (module
      (obj_name graph__PersistentQueue)
      (visibility public)
      (source
       (path PersistentQueue)
       (intf (path lib/persistentQueue.mli))
       (impl (path lib/persistentQueue.ml))))
     (module
      (obj_name graph__Prim)
      (visibility public)
      (source (path Prim) (intf (path prim.mli)) (impl (path prim.ml))))
     (module
      (obj_name graph__Rand)
      (visibility public)
      (source (path Rand) (intf (path rand.mli)) (impl (path rand.ml))))
     (module
      (obj_name graph__Sig)
      (visibility public)
      (source (path Sig) (intf (path sig.mli))))
     (module
      (obj_name graph__Sig_pack)
      (visibility public)
      (source (path Sig_pack) (intf (path sig_pack.mli))))
     (module
      (obj_name graph__Strat)
      (visibility public)
      (source (path Strat) (intf (path strat.mli)) (impl (path strat.ml))))
     (module
      (obj_name graph__Topological)
      (visibility public)
      (source
       (path Topological)
       (intf (path topological.mli))
       (impl (path topological.ml))))
     (module
      (obj_name graph__Traverse)
      (visibility public)
      (source
       (path Traverse)
       (intf (path traverse.mli))
       (impl (path traverse.ml))))
     (module
      (obj_name graph__Unionfind)
      (visibility public)
      (source
       (path Unionfind)
       (intf (path lib/unionfind.mli))
       (impl (path lib/unionfind.ml))))
     (module
      (obj_name graph__Util)
      (visibility public)
      (source (path Util) (intf (path util.mli)) (impl (path util.ml))))
     (module
      (obj_name graph__WeakTopological)
      (visibility public)
      (source
       (path WeakTopological)
       (intf (path weakTopological.mli))
       (impl (path weakTopological.ml))))
     (module
      (obj_name graph__XDot)
      (visibility public)
      (source (path XDot) (intf (path xDot.mli)) (impl (path xDot.ml))))
     (module
      (obj_name graph__XDotDraw)
      (visibility public)
      (source
       (path XDotDraw)
       (intf (path xDotDraw.mli))
       (impl (path xDotDraw.ml))))))
   (wrapped true))))
