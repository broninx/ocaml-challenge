let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\252\255\253\255\001\000\002\000\003\000\254\255\004\000\
    \251\255\252\255\005\000\001\000\006\000\007\000\254\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\001\000\000\000\255\255\255\255\255\255\
    \255\255\255\255\002\000\000\000\000\000\255\255\255\255";
  Lexing.lex_default =
   "\004\000\000\000\000\000\255\255\004\000\255\255\000\000\012\000\
    \000\000\000\000\255\255\012\000\012\000\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\002\000\255\255\255\255\000\000\009\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\005\000\255\255\006\000\010\000\013\000\
    \255\255\014\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\011\000\000\000\000\000\
    \011\000\000\000\011\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\255\255\000\000\008\000\000\000\255\255\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\011\000\004\000\255\255\007\000\255\255\
    \012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\003\000\004\000\005\000\007\000\010\000\
    \012\000\013\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\011\000\255\255\255\255\
    \007\000\255\255\012\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\011\000\004\000\255\255\007\000\255\255\012\000\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec main unquoted quoted lexbuf =
   __ocaml_lex_main_rec unquoted quoted lexbuf 0
and __ocaml_lex_main_rec unquoted quoted lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 13 "src/format/opamInterpLexer.mll"
               ( unquoted @@ Lexing.lexeme lexbuf;
                 main unquoted quoted lexbuf )
# 104 "src/format/opamInterpLexer.ml"

  | 1 ->
let
# 15 "src/format/opamInterpLexer.mll"
                      quote
# 110 "src/format/opamInterpLexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 16 "src/format/opamInterpLexer.mll"
               ( unquoted quote;
                 let triple = String.length quote = 3 in
                 string triple unquoted quoted lexbuf )
# 116 "src/format/opamInterpLexer.ml"

  | 2 ->
# 19 "src/format/opamInterpLexer.mll"
               ( Lexing.new_line lexbuf;
                 unquoted "\n";
                 main unquoted quoted lexbuf )
# 123 "src/format/opamInterpLexer.ml"

  | 3 ->
# 22 "src/format/opamInterpLexer.mll"
               ( () )
# 128 "src/format/opamInterpLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec unquoted quoted lexbuf __ocaml_lex_state

and string triple unquoted quoted lexbuf =
   __ocaml_lex_string_rec triple unquoted quoted lexbuf 7
and __ocaml_lex_string_rec triple unquoted quoted lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 27 "src/format/opamInterpLexer.mll"
               ( quoted @@ Lexing.lexeme lexbuf;
                 string triple unquoted quoted lexbuf )
# 141 "src/format/opamInterpLexer.ml"

  | 1 ->
# 30 "src/format/opamInterpLexer.mll"
               ( unquoted "\"\"\"";
                 main unquoted quoted lexbuf )
# 147 "src/format/opamInterpLexer.ml"

  | 2 ->
# 32 "src/format/opamInterpLexer.mll"
               ( if triple then begin
                   quoted "\"";
                   string triple unquoted quoted lexbuf
                 end else begin
                   unquoted "\"";
                   main unquoted quoted lexbuf
                 end )
# 158 "src/format/opamInterpLexer.ml"

  | 3 ->
# 39 "src/format/opamInterpLexer.mll"
               ( Lexing.new_line lexbuf;
                 unquoted "\n";
                 string triple unquoted quoted lexbuf)
# 165 "src/format/opamInterpLexer.ml"

  | 4 ->
# 42 "src/format/opamInterpLexer.mll"
               ( () )
# 170 "src/format/opamInterpLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_string_rec triple unquoted quoted lexbuf __ocaml_lex_state

;;

